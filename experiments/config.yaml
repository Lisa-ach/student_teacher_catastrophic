experiment_name:                    continual_learner
use_gpu:                            True                      # whether to use a gpu if it is available on the device          
seed:                               10                        # random seed 
resume:        
verbose:                            True                      # whether to print

training:
  total_training_steps:             1000000000                # total number of training steps to take
  train_batch_size:                 1                         # number of tasks sampled per meta-update (per outer loop)
  test_batch_size:                  50000                     # number of samples to use for generalisatio error
  learning_rate:                    0.2                       # learning rate for sgd update of student
  num_teachers:                     2                         # number of teachers to use
  loss_function:                    mse                       # function to use for loss
  label_tasks:                      True                      # whether or not to add the task index to the input (extra supervision)
  
testing:
  test_frequency:                   1                         # how often during training to perform generalisation error test loop
  overlap_frequency:                100                       # how often during training to compute / visualise overlap matrices
  test_all_teachers:                True                      # whether to compute generalisation losses for all teachers or just one currently teaching

model:
  input_dimension:                  500                       # dimension of network input 
  student_hidden_layers:            [2]                       # dimension of hidden layers to be used in student network
  teacher_hidden_layers:            [1]                       # dimension of hidden layers to be used in teacher network(s)
  output_dimension:                 1                         # dimension of network output
  nonlinearity:                     sigmoid                   # nonlinearity to be used for networks
  teacher_initialisation_std:       1                         # std of normal initialisation for teacher network
  student_initialisation_std:       0.001                     # std of normal initialisation for student network
  teacher_add_noise:                False                     # whether or not to add noise to teacher output
  student_add_noise:                False                     # whether or not to add noise to student output (likely will never use this)
  soft_committee:                   False                     # whether or not to freeze output layer (scm)
  bias_parameters:                  False                     # whether or not to have bias parameters on linaer layers

curriculum:
  type:                             custom                    # curriculum type (custom - declarative or standard - imperative)

  selection_type:                   cyclical                  # how to determine next task (random or cyclical)
  stopping_condition:               threshold                 # condition on which to switch task (fixed_period or threshold)

  fixed_period:                     1000                      # period for changing tasks 
  loss_threshold:                   0.0008                    # loss threshold under which teacher is changed 

  custom:                           [0, 1]                    # curriculum defined manually. Each entry defines next teacher index